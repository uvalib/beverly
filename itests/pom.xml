<?xml version='1.0' encoding='UTF-8' ?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>edu.virginia.lib.beverly</groupId>
	<artifactId>itests</artifactId>
	<version>0.9</version>

	<name>Integration tests for Beverly</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<pax.exam.version>2.3.1</pax.exam.version>
		<fedora.home>${project.build.directory}/fedora-home</fedora.home>
		<fedora.objectStore>${fedora.home}/data/objectStore</fedora.objectStore>
		<fedora.datastreamStore>${fedora.home}/data/datastreamStore</fedora.datastreamStore>
		<javax.net.ssl.trustStore>${fedora.home}/server/truststore</javax.net.ssl.trustStore>
		<javax.net.ssl.trustStorePassword>tomcat</javax.net.ssl.trustStorePassword>
		<fedora.appServerContext>fedora</fedora.appServerContext>
		<solr.home>${project.build.directory}/solr-home</solr.home>
	</properties>

	<build>
		<testResources>
			<!-- copy Fedora home to be used by integration tests -->
			<testResource>
				<directory>${basedir}/src/test/resources/fedora-home</directory>
				<targetPath>${fedora.home}</targetPath>
			</testResource>
			<!-- ditto for Solr -->
			<testResource>
				<directory>${basedir}/src/test/resources/solr-home</directory>
				<targetPath>${solr.home}</targetPath>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>generate-depends-file</id>
						<goals>
							<goal>generate-depends-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<configuration>
						<deployables>
							<deployable>
								<artifactId>fcrepo-webapp-fedora</artifactId>
								<groupId>org.fcrepo</groupId>
								<type>war</type>
								<properties>
									<!-- put our test deployment in URL tree -->
									<context>${fedora.appServerContext}</context>
								</properties>
							</deployable>
							<deployable>
								<artifactId>solr</artifactId>
								<groupId>org.apache.solr</groupId>
								<type>war</type>
							</deployable>
						</deployables>
						<properties>
							<cargo.servlet.uriencoding>UTF-8</cargo.servlet.uriencoding>
							<!-- Fedora + Solr?! In one JVM!? What a pig!! -->
							<cargo.jvmargs>-XX:MaxPermSize=384M -Xmx512M</cargo.jvmargs>
						</properties>
					</configuration>
					<container>
						<containerId>tomcat7x</containerId>
						<zipUrlInstaller>
							<url>https://archive.apache.org/dist/tomcat/tomcat-7/v7.0.27/bin/apache-tomcat-7.0.27.zip</url>
							<downloadDir>${project.build.directory}/downloads</downloadDir>
							<extractDir>${project.build.directory}/extracts</extractDir>
						</zipUrlInstaller>
						<log>${project.build.directory}/tomcat.log</log>
						<systemProperties>
							<!-- Here's where we hook Fedora up with a Fedora-home -->
							<fedora.home>${fedora.home}</fedora.home>
							<fedora.objectStore>${fedora.objectStore}</fedora.objectStore>
							<fedora.datastreamStore>${fedora.datastreamStore}</fedora.datastreamStore>
							<javax.net.ssl.trustStore>${javax.net.ssl.trustStore}</javax.net.ssl.trustStore>
							<javax.net.ssl.trustStorePassword>${javax.net.ssl.trustStorePassword}</javax.net.ssl.trustStorePassword>
							<!-- Here's where we hook Solr up with a Solr-home -->
							<solr.solr.home>${solr.home}</solr.solr.home>
						</systemProperties>
					</container>
				</configuration>
				<executions>
					<!-- starting container prior to integration tests -->
					<execution>
						<id>start-container</id>
						<phase>test-compile</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<!-- stopping container after integration tests -->
					<execution>
						<id>stop-container</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.servicemix.tooling
										</groupId>
										<artifactId>
											depends-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>
												generate-depends-file
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.cargo
										</groupId>
										<artifactId>
											cargo-maven2-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>start</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>edu.virginia.lib</groupId>
			<artifactId>repository-indexing</artifactId>
			<version>0.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.openengsb.labs.paxexam.karaf</groupId>
			<artifactId>paxexam-karaf-container</artifactId>
			<version>0.5.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit4</artifactId>
			<version>${pax.exam.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf</groupId>
			<artifactId>apache-karaf</artifactId>
			<version>2.2.7</version>
			<type>zip</type>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.karaf.shell</groupId>
					<artifactId>org.apache.karaf.shell.dev</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>12.0</version>
			<scope>test</scope>
		</dependency>
		<!-- dependencies for launching Fedora for integration tests -->
		<dependency>
			<groupId>org.fcrepo</groupId>
			<artifactId>fcrepo-webapp-fedora</artifactId>
			<version>3.5</version>
			<type>war</type>
		</dependency>
		<!-- dependencies for Solr ditto -->
		<dependency>
			<artifactId>solr</artifactId>
			<groupId>org.apache.solr</groupId>
			<type>war</type>
			<version>3.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>0.11.0</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
			<id>Apache Public</id>
			<name>Apache Public Releases</name>
			<url>https://repository.apache.org/content/groups/public/</url>
		</repository>
	</repositories>
</project>
